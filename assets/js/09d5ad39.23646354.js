"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[864],{1498:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>u});var t=n(4848),i=n(8453);const o={id:"examples",title:"Examples"},a=void 0,r={id:"examples",title:"Examples",description:"Publish Website to GitHub Pages",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/docs/examples",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"examples",title:"Examples"},sidebar:"someSidebar",previous:{title:"Run to Build and Publish",permalink:"/docs/run"}},c={},u=[{value:"Publish Website to GitHub Pages",id:"publish-website-to-github-pages",level:2},{value:"Use Docusaurus 2 + mdoc + GitHub Actions",id:"use-docusaurus-2--mdoc--github-actions",level:2},{value:"Docusaurus 2",id:"docusaurus-2",level:3},{value:"Mdoc + Docusaurus 2",id:"mdoc--docusaurus-2",level:3},{value:"GitHub Actions",id:"github-actions",level:3}];function l(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"publish-website-to-github-pages",children:"Publish Website to GitHub Pages"}),"\n",(0,t.jsxs)(s.p,{children:["To publish your website to GitHub Actions, first, make sure you have ",(0,t.jsx)(s.code,{children:"gh-pages"})," branch.\nIf you don't already have it, create it first."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:'# Move to some temporary location.\n# Clone your project. This one will be removed once the `gh-pages` creation is done.\n$ git clone git@github.com:USERNAME/YOUR_PROJECT.git\n\n$ cd YOUR_PROJECT\n\n$ git checkout --orphan gh-pages\n\n# Make sure you\'re in the project directory.\n$ git rm -rf .\n\n$ git commit --allow-empty -m "Add gh-pages branch"\n\n$ git push origin gh-pages\n\n# Now you can remove this project in the temporary location.\n'})}),"\n",(0,t.jsx)(s.h2,{id:"use-docusaurus-2--mdoc--github-actions",children:"Use Docusaurus 2 + mdoc + GitHub Actions"}),"\n",(0,t.jsx)(s.h3,{id:"docusaurus-2",children:"Docusaurus 2"}),"\n",(0,t.jsx)(s.p,{children:"Create a Docusarus site directory using its template. You need node for using Docusaurus."}),"\n",(0,t.jsx)(s.p,{children:"e.g.)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:"npx @docusaurus/init@next init website classic \n"})}),"\n",(0,t.jsxs)(s.p,{children:["It creates the Docusarus folder at ",(0,t.jsx)(s.code,{children:"PROJECT_HOME/website/"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Check out the ",(0,t.jsx)(s.a,{href:"https://v2.docusaurus.io/docs/",children:"Docusuarus docs"})," and finish configuration."]}),"\n",(0,t.jsx)(s.h3,{id:"mdoc--docusaurus-2",children:"Mdoc + Docusaurus 2"}),"\n",(0,t.jsxs)(s.p,{children:["Add ",(0,t.jsx)(s.code,{children:"sbt-mdoc"})," plugin and ",(0,t.jsx)(s.code,{children:"sbt-docusaur"})," to ",(0,t.jsx)(s.code,{children:"project/plugins.sbt"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",metastring:'title="project/plugins.sbt"',children:'addSbtPlugin("org.scalameta" % "sbt-mdoc" % "2.3.6" )\n\naddSbtPlugin("io.kevinlee" % "sbt-docusaur" % "0.17.0")\n'})}),"\n",(0,t.jsxs)(s.p,{children:["In your ",(0,t.jsx)(s.code,{children:"build.sbt"}),", add a sub-project for the doc site with ",(0,t.jsx)(s.code,{children:"sbt-mdoc"})," and ",(0,t.jsx)(s.code,{children:"sbt-docusaur"}),", and set up the Docusarus."]}),"\n",(0,t.jsx)(s.p,{children:"e.g.)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",metastring:'title="build.sbt"',children:'lazy val noPublish = Seq(\n  publish := {},\n  publishLocal := {},\n  publishArtifact := false,\n  skip in publish := true,\n)\n\nlazy val docs = (project in file("generated-docs"))\n  .enablePlugins(MdocPlugin, DocusaurPlugin)\n  .settings(\n    name := "docs",\n\n    docusaurDir := (ThisBuild / baseDirectory).value / "website",\n    docusaurBuildDir := docusaurDir.value / "build",\n  )\n  .settings(noPublish) // This is required to exclude this sub-project\n                       // when sbt publish to upload the artifacts.\n\n'})}),"\n",(0,t.jsxs)(s.p,{children:["In your ",(0,t.jsx)(s.code,{children:"website/docusaurus.config.js"}),", make sure that Docusaurus knows where your generated Makrdown files are.\nSo make sure your Docusaurus config has"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"docs: {\n  path: '../generated-docs/target/mdoc/'\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"So it may look like,"}),"\n",(0,t.jsx)(s.p,{children:"e.g.)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",metastring:'title="website/docusaurus.config.js"',children:"module.exports = {\n  // ...\n\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          path: '../generated-docs/target/mdoc/',\n          homePageId: 'docs',\n          sidebarPath: require.resolve('./sidebars.js'),\n        },\n    ]\n  ]\n\n  // ...\n};\n"})}),"\n",(0,t.jsx)(s.h3,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,t.jsxs)(s.p,{children:["Just place the following yaml file in ",(0,t.jsx)(s.code,{children:"YOUR_PROJECT/.github/workflows/"})]}),"\n",(0,t.jsxs)(s.p,{children:["Whenever push happens on the ",(0,t.jsx)(s.code,{children:"main"})," branch, it publishes the website. ",(0,t.jsx)("br",{}),"\nIt uses Mdoc to generate the Markdown files with the Scala code compiled and run.",(0,t.jsx)("br",{}),"\nAfter that it builds Docusarus website then publish to ",(0,t.jsx)(s.code,{children:"gh-pages"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"e.g.)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".github/workflows/publish-github-pages.yml"',children:"name: \"Publish GitHub Pages\"\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build_and_publish_doc_site:\n    if: github.ref != 'refs/heads/gh-pages' && github.ref != 'gh-pages'\n\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        scala:\n          - { binary-version: \"2.12\", java-version: \"adopt@1.8\" }\n\n    steps:\n      - uses: actions/checkout@v2.3.4\n      - uses: olafurpg/setup-scala@v10\n        with:\n          java-version: ${{ matrix.scala.java-version }}\n      - uses: actions/setup-node@v2.1.5\n        with:\n          node-version: '14.16.0'\n          registry-url: 'https://registry.npmjs.org'\n\n      - name: Cache SBT\n        uses: actions/cache@v2\n        with:\n          path: |\n            ~/.ivy2/cache\n            ~/.cache/coursier\n            ~/.sbt\n          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}\n          restore-keys: |\n            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-\n\n      - name: Cache npm\n        uses: actions/cache@v2\n        with:\n          path: ~/.npm\n          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n          restore-keys: |\n            ${{ runner.os }}-node-\n\n      - name: Build and publish website\n        env:\n          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}\n          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}\n          ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME }}\n          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}\n          GA_ANONYMIZE_IP: ${{ secrets.GA_ANONYMIZE_IP }}\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: |\n          sbt \\\n            docs/clean \\\n            docs/mdoc \\\n            docs/docusaurGenerateAlgoliaConfigFile \\\n            docs/docusaurGenerateGoogleAnalyticsConfigFile \\\n            docs/docusaurInstall \\\n            docs/docusaurCleanBuild \\\n            docs/docusaurBuild \\\n            docs/publishToGitHubPages\n"})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>r});var t=n(6540);const i={},o=t.createContext(i);function a(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);